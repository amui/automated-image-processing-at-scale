{
	"StartAt": "Format data",
	"States": {
		"Format data": {
			"Type": "Pass",
			"Parameters": {
				"downloadBucket.$": "$.detail.bucket.name",
				"downloadKey.$": "$.detail.object.key",
				"uploadBucket": "${croppedImages}"
			},
			"Next": "Get Signed Url"
		},
		"Get Signed Url": {
			"Type": "Task",
			"Resource": "arn:aws:states:::lambda:invoke",
			"OutputPath": "$.Payload",
			"Parameters": {
				"Payload.$": "$",
				"FunctionName": "${getSignedUrl}"
			},
			"Retry": [
				{
					"ErrorEquals": [
						"Lambda.ServiceException",
						"Lambda.AWSLambdaException",
						"Lambda.SdkClientException",
						"Lambda.TooManyRequestsException"
					],
					"IntervalSeconds": 1,
					"MaxAttempts": 3,
					"BackoffRate": 2
				}
			],
			"Next": "Call Adobe Crop API"
		},
		"Call Adobe Crop API": {
			"Type": "Task",
			"Resource": "arn:aws:states:::http:invoke",
			"Parameters": {
				"ApiEndpoint": "https://image.adobe.io/pie/psdService/productCrop",
				"Method": "POST",
				"Authentication": {
					"ConnectionArn": "${adobeConnection}"
				},
				"RequestBody": {
					"inputs": [
						{
							"storage": "external",
							"href.$": "$.downloadUrl"
						}
					],
					"options": {
						"unit": "Pixels",
						"width": 10,
						"height": 10
					},
					"outputs": [
						{
							"storage": "external",
							"type": "image/png",
							"href.$": "$.uploadUrl"
						}
					]
				}
			},
			"Retry": [
				{
					"ErrorEquals": [
						"States.ALL"
					],
					"BackoffRate": 2,
					"IntervalSeconds": 1,
					"MaxAttempts": 3,
					"JitterStrategy": "FULL"
				}
			],
			"End": true
		}
	}
}